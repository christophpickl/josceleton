<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <name>${project.artifactId}</name>
    <description>
    	TODO: Will be => The super POM for all josceleton java artifacts.
    	Currently provides non-java-only related, but somehow more josceleton specific,
    	but in josceleton-pom only version numbers.
    </description>
    <packaging>pom</packaging>
    
    <artifactId>java-pom</artifactId>
    <version>0.5-SNAPSHOT</version>
    
    <!-- ******************************************************************* -->
    <!--                             P A R E N T                             -->
    <!-- ******************************************************************* -->
    
    <parent>
        <groupId>net.sf.josceleton</groupId>
        <artifactId>java-abstract-pom</artifactId>
        <version>0.5-SNAPSHOT</version>
    	<relativePath>../java-abstract-pom/pom.xml</relativePath>
    </parent>
    
    
    <!-- ******************************************************************* -->
    <!--                         P R O P E R T I E S                         -->
    <!-- ******************************************************************* -->
    
    <properties>
    	
        <!-- V E R S I O N S   I N T E R N A L -->
   		<!-- *********************************************************** -->
   		
   		<!--
		    <groupId>net.sf.josceleton.thirdparty.com.google.code.guice</groupId>
		    <artifactId>guice-dependencies</artifactId>
		    <version>2.x-SNAPSHOT</version> ... should be updated, if corporate-pom has changed; and changes are needed for guice dep; i dont think so ...
   		-->
    	<version_josceleton_guice>2.3</version_josceleton_guice><!-- maybe we dont need any newer version -->
    	<version_josceleton_commons>0.5-SNAPSHOT</version_josceleton_commons>
    	<version_josceleton_core-api>0.5-SNAPSHOT</version_josceleton_core-api>
    	<version_josceleton_core-impl>0.5-SNAPSHOT</version_josceleton_core-impl>
    	<version_josceleton_connection-api>0.5-SNAPSHOT</version_josceleton_connection-api>
    	<version_josceleton_connection-impl>0.5-SNAPSHOT</version_josceleton_connection-impl>
    	<version_josceleton_motion-api>0.2-SNAPSHOT</version_josceleton_motion-api>
    	<version_josceleton_motion-impl>0.2-SNAPSHOT</version_josceleton_motion-impl>
    	<version_josceleton_josceleton>0.5-SNAPSHOT</version_josceleton_josceleton>
   		<version_josceleton-checkstyle-config>0.5-SNAPSHOT</version_josceleton-checkstyle-config>
   		
   		<!-- PROTOTYPES -->
   		<version_josceleton_console_prototype>0.1-SNAPSHOT</version_josceleton_console_prototype>
   		
   		
        <!-- V E R S I O N S   E X T E R N A L -->
   		<!-- *********************************************************** -->
   		
    	<version_javaosc>1.0-20060402-josceleton</version_javaosc>
    	
    	<version_eclipse-plugin>2.8</version_eclipse-plugin><!-- TODO outsource to upper pom (?) -->
    	
    </properties>
    
    
    <!-- ******************************************************************* -->
    <!--              D E P E N D E N C Y  M A N A G E M E N T               -->
    <!-- ******************************************************************* -->
    
    <dependencyManagement>
    	<dependencies>
        	
	        <!-- I N T E R N A L -->
    		<!-- *********************************************************** -->

			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>commons</artifactId>
				<version>${version_josceleton_commons}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>commons</artifactId>
				<version>${version_josceleton_commons}</version>
				<type>test-jar</type>
			</dependency>
			
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>core-api</artifactId>
				<version>${version_josceleton_core-api}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>core-api</artifactId>
				<version>${version_josceleton_core-api}</version>
				<type>test-jar</type>
			</dependency>
			
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>core-impl</artifactId>
				<version>${version_josceleton_core-impl}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>core-impl</artifactId>
				<version>${version_josceleton_core-impl}</version>
				<type>test-jar</type>
			</dependency>
			
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>connection-api</artifactId>
				<version>${version_josceleton_connection-api}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>connection-api</artifactId>
				<version>${version_josceleton_connection-api}</version>
				<type>test-jar</type>
			</dependency>
			
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>connection-impl</artifactId>
				<version>${version_josceleton_connection-impl}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>connection-impl</artifactId>
				<version>${version_josceleton_connection-impl}</version>
				<type>test-jar</type>
			</dependency>
			
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>motion-api</artifactId>
				<version>${version_josceleton_motion-api}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>motion-api</artifactId>
				<version>${version_josceleton_motion-api}</version>
				<type>test-jar</type>
			</dependency>
			
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>motion-impl</artifactId>
				<version>${version_josceleton_motion-impl}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>motion-impl</artifactId>
				<version>${version_josceleton_motion-impl}</version>
				<type>test-jar</type>
			</dependency>
			
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>josceleton</artifactId>
				<version>${version_josceleton_josceleton}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.josceleton</groupId>
				<artifactId>josceleton</artifactId>
				<version>${version_josceleton_josceleton}</version>
				<type>test-jar</type>
			</dependency>
    		
	        <dependency>
	            <groupId>net.sf.josceleton.prototype</groupId>
	            <artifactId>console-prototype</artifactId>
	            <version>${version_josceleton_console_prototype}</version>
	        </dependency>
	        
	        
	        <!-- P S E U D O   E X T E R N A L -->
    		<!-- *********************************************************** -->
    		
			<dependency>
				<groupId>net.sf.josceleton.thirdparty.com.google.code.guice</groupId>
				<artifactId>guice-dependencies</artifactId>
				<version>${version_josceleton_guice}</version>
				<type>pom</type>
			</dependency>
			
	        <dependency>
		        <groupId>com.illposed</groupId>
		        <artifactId>javaosc</artifactId>
		        <version>${version_javaosc}</version>
	        </dependency>
	        
    	</dependencies>
    </dependencyManagement>
    
    
    <!-- ******************************************************************* -->
    <!--                       D E P E N D E N C I E S                       -->
    <!-- ******************************************************************* -->
    
    <dependencies>
    
        <!-- has to be defined in here as TestNG comes with its own guice2 dependency -->
		<dependency>
			<groupId>net.sf.josceleton.thirdparty.com.google.code.guice</groupId>
			<artifactId>guice-dependencies</artifactId>
			<type>pom</type>
			<exclusions>
				<!-- we dont need grapher functionality -->
				<exclusion>
		            <groupId>com.google.code.guice</groupId>
		            <artifactId>guice-grapher</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
    
    </dependencies>
    
    
    <!-- ******************************************************************* -->
    <!--                              B U I L D                              -->
    <!-- ******************************************************************* -->
    
    <build>
        
        <pluginManagement>
        	<plugins>
				
				<plugin>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${version_eclipse-plugin}</version>
				</plugin>
        		
	            <plugin>
	                <artifactId>maven-checkstyle-plugin</artifactId>
					
					<!-- the following dependency contains the checkstyle config and suppresion XMLs in its src/main/resources folder -->
					<dependencies>
						<dependency>
							<groupId>${project.groupId}</groupId>
							<artifactId>checkstyle-config</artifactId>
							<version>${version_josceleton-checkstyle-config}</version>
						</dependency>
					</dependencies>
					
                	<!-- ... it seems that whole reporting is obsolete with mvn3; everything shifted in build ... -->
                	<!-- ATTENTION config for build and for reporting can not be shared :( -->
                	
<!--	                    <headerLocation>LICENSE.txt</headerLocation>-->
<!--						<xrefLocation>${project.reporting.outputDirectory}/xref</xrefLocation>-->
					<!-- set checkstyle fails on error as property (release=>true) !NOOOO! checkstyle should ALWAYS fail, not only for release -->
	                <!-- for configuration options see: http://maven.apache.org/plugins/maven-checkstyle-plugin/checkstyle-mojo.html -->
					
                	<!-- <<<<<< DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION -->
	                <configuration>
	                    <configLocation>checkstyle.xml</configLocation>
	                    <suppressionsLocation>checkstyle_suppression.xml</suppressionsLocation>
	                    <failsOnError>true</failsOnError>
	                    <includeTestSourceDirectory>false</includeTestSourceDirectory>
	                    <enableRulesSummary>true</enableRulesSummary>
	                </configuration>
                	<!-- <<<<<< DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION -->
                	
				</plugin>
				
        	</plugins>
        </pluginManagement>
        
        <plugins>
            
            <!-- ECLIPSE -->
            <!-- *********************************************************** -->
            
            <plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<!-- MINOR 000014 @BUILD POM get rid of logged warning message from eclipse plugin -->
				<!--            mvn eclipse:eclipse => [WARNING] Workspace defines a VM that does not contain a valid jre/lib/rt.jar: /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home -->
				<!-- earlier tried to downgrade from 2.8 to 2.5.1; warning disappeared, but now other one pops up something about wtp error  -->
				<version>${version_eclipse-plugin}</version>
				
				<configuration>
					<!-- for configuration options see: http://maven.apache.org/plugins/maven-eclipse-plugin/eclipse-mojo.html -->
					
					<!-- maven looks into workspace and set project references if project name matched instead of linked m2repo jar -->
					<workspace>${josceleton-peruser_eclipse_workspace_path}</workspace>
					
					<!-- with groupid set, we can reuse eg "java-pom" in josceleton and other projects (pulse); but have to get sure the workspace config for project refs still works -->
					<addGroupIdToProjectName>true</addGroupIdToProjectName>
					<addVersionToProjectName>true</addVersionToProjectName>
					
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					
					<!-- configure eclise-checkstyle plugin -->
					<additionalBuildcommands>
<!--						<buildcommand>com.atlassw.tools.eclipse.checkstyle.CheckstyleBuilder</buildcommand>-->
						<buildcommand>net.sf.eclipsecs.core.CheckstyleBuilder</buildcommand>
					</additionalBuildcommands>
					<additionalProjectnatures>
<!--						<projectnature>com.atlassw.tools.eclipse.checkstyle.CheckstyleNature</projectnature>-->
						<projectnature>net.sf.eclipsecs.core.CheckstyleNature</projectnature>
					</additionalProjectnatures>
					
					<additionalConfig>
						<file>
							<name>.checkstyle</name>
							<!-- var ${josceleton-peruser_checkstyle_configuration_name} defined in settings.xml -->
							<content>
			                	<![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<fileset-config file-format-version="1.2.0" simple-config="true" sync-formatter="false">
  <fileset name="all" enabled="true" check-config-name="${josceleton-peruser_checkstyle_configuration_name}" local="false">
    <file-match-pattern match-pattern="." include-pattern="true" />
  </fileset>
  <filter name="NonSrcDirs" enabled="true" />
</fileset-config>]]>
							</content>
<!--						alternatively to content load external, but introduces -external- dependency, which is not good: -->
<!--							<url>http://some.place.org/path/to/file</url>-->
<!--							 <location>/checkstyle-config.xml</location>-->
						</file>
					</additionalConfig>
				</configuration>
			</plugin>
			
            
            <!-- CODE QUALITY -->
            <!-- *********************************************************** -->
            
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
            
        </plugins>
        
    </build>
    
	
    <!-- ******************************************************************* -->
    <!--                           P R O F I L E S                           -->
    <!-- ******************************************************************* -->
    
	<profiles>
		<profile>
			<id>create-reports-java-pom</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>report.skip</name>
					<value>!true</value>
				</property>
			</activation>
	    	<build>
	    		<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>create-reports-java-pom-message</id><phase>pre-site</phase>
								<configuration><target>
									<echo message="[JOSCELETON] [java-pom] Creating enhanced site reports." />
									<echo message="[JOSCELETON] [java-pom] (disable by using: &quot;mvn xxx -Dreport.skip&quot;)" />
									<echo message="[JOSCELETON] [java-pom] ==============================================================" />
								</target></configuration><goals><goal>run</goal></goals>
							</execution>
						</executions>
					</plugin>
	    		</plugins>
	    	</build>
	    	
		    <!-- ******************************************************************* -->
		    <!--                          R E P O R T I N G                          -->
		    <!-- ******************************************************************* -->
		    
		    <reporting>
		    	<plugins>
		        
		            <plugin>
		                <artifactId>maven-checkstyle-plugin</artifactId>
		                <version>${verison_checkstyle}</version>
		                
		               	<!-- <<<<<< DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION -->
		                <configuration>
		                    <configLocation>checkstyle.xml</configLocation>
		                    <suppressionsLocation>checkstyle_suppression.xml</suppressionsLocation>
		                    <failsOnError>true</failsOnError>
		                    <includeTestSourceDirectory>false</includeTestSourceDirectory>
		                    <enableRulesSummary>true</enableRulesSummary>
		                </configuration>
		               	<!-- <<<<<< DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION -->
		                
		            </plugin>
		    	</plugins>
		    </reporting>
	    </profile>
	
	</profiles>
    
    
    <!-- ******************************************************************* -->
    <!--                                S C M                                -->
    <!-- ******************************************************************* -->
    
    <scm>
        <connection>scm:svn:https://josceleton.svn.sourceforge.net/svnroot/josceleton/artifact/pom/java-pom/trunk/</connection>
        <developerConnection>scm:svn:https://josceleton.svn.sourceforge.net/svnroot/josceleton/artifact/pom/java-pom/trunk/</developerConnection>
        <url>http://josceleton.svn.sourceforge.net/viewvc/josceleton/artifact/pom/java-pom/trunk/</url>
    </scm>
    
    
    <!-- ******************************************************************* -->
    <!--            D I S T R I B U T I O N   M A N A G E M E N T            -->
    <!-- ******************************************************************* -->
        
    <distributionManagement>
		<site>
			<id>josceleton-sourceforge-server</id>
			<url>${distribution_site_url_prefix}/${project.artifactId}/${project.version}/</url>
		</site>
    </distributionManagement>
    
</project>
