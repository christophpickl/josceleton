
	// REMEMBER to keep release guide updated!

	/*******************************************************************\
	|  PREPARATIONS                                                     |
	\*******************************************************************/

	CLEANUP CODE
	=====================================================================
DONE	* resolve all warnings from: eclipse, compiler, checkstyle
DONE	* resolve "extended" warnings from: findbugs, pmd, cpd, ...
DONE	* resolve tasktags: NO high-prio tasks ("FIXMEs"), preferrably no med-prio ("TODOs")
	
	UPDATE DOCUMENTATION
	=====================================================================
		// no new planning, just freezing things ;)
DONE	* update roadmap site: remove section about currently deploying version
DONE	* update changelog site: add subsection about new version
~DONE	* update changelog site: update (aggregated and per-project) metrics
	
	UPDATE MAVEN VERSIONS
	=====================================================================
DONE	* figure out proper artifacts which have to be bumped up
DONE	* update pom versions for parent references and dependencies
			// especially pay attention to java-pom


	/*******************************************************************\
	|  CREATE TAGS                                                      |
	\*******************************************************************/

	FINAL VERIFICATIONS
	=====================================================================
DONE	* ensure workspace is updated to head
DONE	* ensure stable build "mvn clean verify" (100% coverage) // use provided shellscripts
DONE	* ensure you have really nothing forgotten!
	
	TAG WITH RELEASE PLUGIN
	=====================================================================
		// ATTENTION: !!! maven 2 only !!! do not tag reactors !!!
DONE	* configure shellscript data for mvn_scripts/release.sh
DONE	* open shell; e.g.: $ ssh -t christoph_pickl,josceleton@shell.sf.net create
DONE	* please check again all pom versions are correct (you dont want to mess up the build, its not worth your time ;)

XXXX	* execute mvn_scripts/release.sh and have a cup of tea, this can take a while ...
		  ... actually not, you still have to confirm (the default) version numbers
		// release-plugin will create tags, deploy artifact and site, bump up versions and commit


	/*******************************************************************\
	|  POSTPARATIONS                                                    |
	\*******************************************************************/

	MANUAL CHECKS
	=====================================================================
XXXX	* release artifact was deployed: http://josceleton.sourceforge.net/maven/release/net/sf/josceleton/josceleton-reactor/<VERSION>/
XXXX	* site documentation was deployed: http://josceleton.sourceforge.net/documentation/corporate-pom/<VERSION>/
XXXX	* main site was deployed: http://josceleton.sf.net
XXXX	* subversion tag existing: http://josceleton.svn.sourceforge.net/viewvc/josceleton/artifacts/josceleton-reactor/tags/josceleton-<VERSION>/
XXXX	* go through site (links are working, samples compile and run, referenced versions are all up2date)
XXXX	* clean local mvn repo (rm repo/net/sf/josceleton/*) and run some maven sample app
	
	ASSEMBLY DISTRIBUTION PACKAGES
	=====================================================================
		N/A
	
	UPDATE SOURCEFORGE PROJECT
	=====================================================================		
XXXX	* create news entry
		N/A upload release files


	/*******************************************************************\
	|  PREPARE NEW RELEASE (optional)                                   |
	\*******************************************************************/

	CLEANUP ALL KIND OF TODOS
	=====================================================================
XXXX	* reorganize/reprioritize tasktags; move time into todo textfiles ("notes.txt") 
XXXX	* reorganize luxury todos ("luxury_todos.txt")
XXXX	* move issues (simple ones should be merged in packages) to mantis queue
	
	CREATE ROADMAPS
	=====================================================================
XXXX	* create mantis issues based on mantis queue
XXXX	* set proper target version for issues
XXXX	* update documentation roadmap ("roadmap.xml") based on mantis roadmap


	[INFO] BUILD SUCCESSFUL :)
