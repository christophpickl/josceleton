
==========================================
BUILD
==========================================
! @POM in corporate-pom, alle peruser props (von settings.xml) ausgeben (wie current mvn version schon getan)
! rename java-pom to java-super-pom (also rethink naming of java-abstract-pom ... could also split it up into several parts while doing this)
? what is EMMA mvn plugin good for? ... <plugin><groupId>org.codehaus.mojo</groupId><artifactId>emma-maven-plugin</artifactId><version>1.0-alpha-1</version></plugin>
- in distributions legal stuff dazu (license.txt/readme.txt)
- ueberall lizenz header reingeben + checkstyle checken lassen ob eh da ist
- investigieren, ob andere sprachen fuer pom kuhl sind
- tasktags gscheit einteilen: fixme/todo/minor, luxury, dry, design, refactor, pom, test, aop, doc, javadoc, future
-- why bind checkstyle to package phase? <artifactId>maven-checkstyle-plugin</artifactId><version>2.5</version><executions><execution><goals><goal>checkstyle</goal><goal>check</goal></goals><phase>package</phase>
-- someone reported a bug with release-plugin 2.0 (using other mavenExecutorId "forked-path") => <!-- Due to MRELEASE-459 this doesn't work, and you need to specify the "release" profile manually on the command line --><profiles|releaseProfiles>release</profiles|releaseProfiles><mavenExecutorId>forked-path</mavenExecutorId><!-- Workaround for MGPG-9 -->
-- move generation of test-output into target/ folder (no more svn:ignore needed)
--- third party artifakte mit einer custom pom ausstatten: http://docs.codehaus.org/display/MAVENUSER/FAQs-1#FAQs-1-HowdoIinstallafileinmylocalrepositoryalongwithmycustomizedPOM%3F

==========================================
VEEEEERY LUXURY
==========================================
- use BUILDSERVER (hudson) // evtl sogar auch nexus repo
-- @DOC evtl sogar ganz eigenen youtube account anlegen; mehrere -eigene- videos hochladen
- @DOC create custom maven site skin
- @CHECKSTYLE would be nice to annotate a class with custom suppression annotation, and then based on this generate suppression.xml file ;)
- spring bruecke schreiben, um in spring alle josceleton guice zur verfuegung zu haben
-  build osgi bundle: <plugin><groupId>org.apache.felix</groupId><artifactId>maven-bundle-plugin</artifactId><extensions>true</extensions>
	<configuration><instructions><Export-Package>javolution.*,javax.realtime</Export-Package><Private-Package>!*</Private-Package></instructions>

@SHELLSCRIPT
	LUXURY: kleines gui bauen, wo man mvn schnell ausfuehren kann:
		1. enter mvn command
		2. select (checkbox) artifacts to apply to
		2b. oder besser buttons, a la: "install poms-reactor"
	- write report at end (which succeeded/failed; also could count time)
	- could provide argument only which will be used as non-default MVN_CMD
	- could then also register in PATH, and then just enter "mvnj <mvn_command> [specific artifacts/or all by default]"
	- when failing, write file. after fixing problems, could rerun this script and dont rebuild already successfully built projects

==========================================
UNIMPORTANT
==========================================
- register domain josceleton.org
- manage sf "file releases" // frs.sourceforge.net
- URLs wegen mvn3 site plugin mess:
	* http://maven.apache.org/plugins/maven-site-plugin-3.0-beta-3/maven-3.html
	* supported plugin versions https://cwiki.apache.org/MAVEN/maven-3x-and-site-plugin.html
- read pom best practices: http://www.sonatype.com/books/mvnref-book/reference/pom-relationships-sect-pom-best-practice.html


<!--			<url>http://josceleton.sf.net/LICENSE.txt</url>-->
     		<comments>Text displayed below "BSD License" title, below "Project License" header.</comments>

     		<!-- LUXURY @POM what to do with license distribution option "manual" vs "repo"? -->
<!--     		This describes how the project may be legally distributed.-->
<!--				The two stated methods are repo (they may be downloaded from a Maven repository) or-->
<!--				manual (they must be manually installed).-->
<!--     		<distribution>manual</distribution>-->
<!--    <comments>-->
<!--    <![CDATA[-->
<!--    Josceleton-->
<!--Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:-->

<!--Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.-->
<!--Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.-->
<!--Neither the name of Kristoffer Kvam nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.-->

<!--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.-->

<!--See licence.txt for dependancies to other open projects.-->
<!--      ]]>-->
<!--    </comments>-->