<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <name>${project.artifactId} (${project.version})</name>
    <description>The super POM for all josceleton java artifacts.</description>
    <packaging>pom</packaging>
    
    <artifactId>java-pom</artifactId>
    <version>0.2-SNAPSHOT</version>
    
    <!-- ******************************************************************* -->
    <!--                             P A R E N T                             -->
    <!-- ******************************************************************* -->
    
    <parent>
        <groupId>net.sf.josceleton</groupId>
        <artifactId>java-abstract-pom</artifactId>
        <version>0.2-SNAPSHOT</version>
        <relativePath>../java-abstract-pom/</relativePath>
    </parent>
    
    
    <!-- ******************************************************************* -->
    <!--                         P R O P E R T I E S                         -->
    <!-- ******************************************************************* -->
    
    <properties>
    	
    	<!-- TODO @POM outsource per-user configuration properties (eclipse workspace,..) -->
    	<checkstyle-config-name>josceleton-checkstyle-config</checkstyle-config-name>
    	<eclipse-workspace-path>/Users/phudy/_dev/pulse</eclipse-workspace-path>
    	
    	
        <!-- V E R S I O N S -->
   		<!-- *********************************************************** -->
   		
    	<version.josceleton.guice>2.1-SNAPSHOT</version.josceleton.guice>
    	
    	<version.josceleton.commons>0.2-SNAPSHOT</version.josceleton.commons>
    	<version.josceleton.core-api>0.2-SNAPSHOT</version.josceleton.core-api>
    	<version.josceleton.core-impl>0.2-SNAPSHOT</version.josceleton.core-impl>
    	<version.josceleton.connection-api>0.2-SNAPSHOT</version.josceleton.connection-api>
    	<version.josceleton.connection-impl>0.2-SNAPSHOT</version.josceleton.connection-impl>
   		<version.josceleton-checkstyle-config>0.2-SNAPSHOT</version.josceleton-checkstyle-config>
    	<version.javaosc>1.0-20060402-josceleton</version.javaosc>
    	
    </properties>
    
    
    <!-- ******************************************************************* -->
    <!--              D E P E N D E N C Y  M A N A G E M E N T               -->
    <!-- ******************************************************************* -->
    
    <dependencyManagement>
    	<dependencies>
        	
	        <!-- I N T E R N A L -->
    		<!-- *********************************************************** -->

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>commons</artifactId>
				<version>${version.josceleton.commons}</version>
			</dependency>
			
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>commons</artifactId>
				<version>${version.josceleton.commons}</version>
				<type>test-jar</type>
			</dependency>
			
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>core-api</artifactId>
				<version>${version.josceleton.core-api}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>core-api</artifactId>
				<version>${version.josceleton.core-api}</version>
				<type>test-jar</type>
			</dependency>
			
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>core-impl</artifactId>
				<version>${version.josceleton.core-impl}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>core-impl</artifactId>
				<version>${version.josceleton.core-impl}</version>
				<type>test-jar</type>
			</dependency>
			
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>connection-api</artifactId>
				<version>${version.josceleton.connection-api}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>connection-api</artifactId>
				<version>${version.josceleton.connection-api}</version>
				<type>test-jar</type>
			</dependency>
			
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>connection-impl</artifactId>
				<version>${version.josceleton.connection-impl}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>connection-impl</artifactId>
				<version>${version.josceleton.connection-impl}</version>
				<type>test-jar</type>
			</dependency>
    		
	        <!-- P S E U D O   E X T E R N A L -->
    		<!-- *********************************************************** -->
    		
			<dependency>
				<groupId>net.sf.josceleton.thirdparty.com.google.code.guice</groupId>
				<artifactId>guice-dependencies</artifactId>
				<version>${version.josceleton.guice}</version>
				<type>pom</type>
			</dependency>
			
	        <dependency>
		        <groupId>com.illposed</groupId>
		        <artifactId>javaosc</artifactId>
		        <version>${version.javaosc}</version>
	        </dependency>
	        
    	</dependencies>
    </dependencyManagement>
    
    
    <!-- ******************************************************************* -->
    <!--                       D E P E N D E N C I E S                       -->
    <!-- ******************************************************************* -->
    
    <dependencies>
    
        <!-- has to be defined in here as TestNG comes with its own guice2 dependency -->
		<dependency>
			<groupId>net.sf.josceleton.thirdparty.com.google.code.guice</groupId>
			<artifactId>guice-dependencies</artifactId>
			<type>pom</type>
			<exclusions>
				<!-- we dont need grapher functionality -->
				<exclusion>
		            <groupId>com.google.code.guice</groupId>
		            <artifactId>guice-grapher</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
    
    </dependencies>
    
    
    <!-- ******************************************************************* -->
    <!--                              B U I L D                              -->
    <!-- ******************************************************************* -->
    
    <build>
        
        <pluginManagement>
        	<plugins>
        		
	            <plugin>
	                <artifactId>maven-checkstyle-plugin</artifactId>
					
					<!-- the following dependency contains the checkstyle config and suppresion XMLs in its src/main/resources folder -->
					<dependencies>
						<dependency>
							<groupId>${project.groupId}</groupId>
							<artifactId>josceleton-checkstyle-config</artifactId>
							<version>${version.josceleton-checkstyle-config}</version>
						</dependency>
					</dependencies>
					
                	<!-- ... it seems that whole reporting is obsolete with mvn3; everything shifted in build ... -->
                	<!-- ATTENTION config for build and for reporting can not be shared :( -->
                	
<!--	                    <headerLocation>LICENSE.txt</headerLocation>-->
<!--						<xrefLocation>${project.reporting.outputDirectory}/xref</xrefLocation>-->
					<!-- set checkstyle fails on error as property (release=>true) !NOOOO! checkstyle should ALWAYS fail, not only for release -->
	                <!-- for configuration options see: http://maven.apache.org/plugins/maven-checkstyle-plugin/checkstyle-mojo.html -->
					
                	<!-- <<<<<< DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION -->
	                <configuration>
	                    <configLocation>checkstyle.xml</configLocation>
	                    <suppressionsLocation>checkstyle_suppression.xml</suppressionsLocation>
	                    <failsOnError>true</failsOnError>
	                    <includeTestSourceDirectory>false</includeTestSourceDirectory>
	                    <enableRulesSummary>false</enableRulesSummary>
	                </configuration>
                	<!-- <<<<<< DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION -->
                	
				</plugin>
				
        	</plugins>
        </pluginManagement>
        
        <plugins>
            
            <!-- IDE SPECIFIC -->
            <!-- *********************************************************** -->
            
            <plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<!-- MINOR @POM get rid of logged warning message from eclipse plugin -->
				<!--            mvn eclipse:eclipse => [WARNING] Workspace defines a VM that does not contain a valid jre/lib/rt.jar: /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home -->
				<!-- earlier tried to downgrade from 2.8 to 2.5.1; warning disappeared, but now other one pops up something about wtp error  -->
				<configuration>
					<!-- for configuration options see: http://maven.apache.org/plugins/maven-eclipse-plugin/eclipse-mojo.html -->
					
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
<!--					LUXURY @AOP POM enable ajdt plugin for eclipse (<ajdtVersion>1.6</ajdtVersion>)-->
					
					<!-- with groupid set, we can reuse eg "java-pom" in josceleton and other projects (pulse); but have to get sure the workspace config for project refs still works -->
					<addGroupIdToProjectName>true</addGroupIdToProjectName>
<!--					<addVersionToProjectName>true</addVersionToProjectName>-->
					
					<!-- maven looks into workspace and set project references if project name matched instead of linked m2repo jar -->
					<workspace>${eclipse-workspace-path}</workspace>
					
					<!-- configure eclise-checkstyle plugin -->
					<additionalBuildcommands>
<!--						<buildcommand>com.atlassw.tools.eclipse.checkstyle.CheckstyleBuilder</buildcommand>-->
						<buildcommand>net.sf.eclipsecs.core.CheckstyleBuilder</buildcommand>
					</additionalBuildcommands>
					<additionalProjectnatures>
<!--						<projectnature>com.atlassw.tools.eclipse.checkstyle.CheckstyleNature</projectnature>-->
						<projectnature>net.sf.eclipsecs.core.CheckstyleNature</projectnature>
					</additionalProjectnatures>
					
					<additionalConfig>
						<file>
							<name>.checkstyle</name>
							<content>
			                	<![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<fileset-config file-format-version="1.2.0" simple-config="true" sync-formatter="false">
  <fileset name="all" enabled="true" check-config-name="${checkstyle-config-name}" local="false">
    <file-match-pattern match-pattern="." include-pattern="true" />
  </fileset>
  <filter name="NonSrcDirs" enabled="true" />
</fileset-config>]]>
							</content>
<!--						alternatively to content load external, but introduces -external- dependency, which is not good: -->
<!--							<url>http://some.place.org/path/to/file</url>-->
<!--							 <location>/checkstyle-config.xml</location>-->
						</file>
					</additionalConfig>
				</configuration>
			</plugin>
			
            
            <!-- CODE QUALITY -->
            <!-- *********************************************************** -->
            
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
            
        </plugins>
        
    </build>
    
    
    <!-- ******************************************************************* -->
    <!--                          R E P O R T I N G                          -->
    <!-- ******************************************************************* -->
    
    <reporting>
    	<plugins>
        
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${verison.checkstyle}</version>
                
               	<!-- <<<<<< DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION -->
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <suppressionsLocation>checkstyle_suppression.xml</suppressionsLocation>
                    <failsOnError>true</failsOnError>
                    <includeTestSourceDirectory>false</includeTestSourceDirectory>
                    <enableRulesSummary>false</enableRulesSummary>
                </configuration>
               	<!-- <<<<<< DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION DUPLICATION -->
                
            </plugin>
    	</plugins>
    </reporting>
    


    <!-- ******************************************************************* -->
    <!--                           P R O F I L E S                           -->
    <!-- ******************************************************************* -->
    
    <!-- TODO @POM use profile and maven.test.skip property check, to DISABLE COVERAGE (so no more need of -DdisableTests) -->
    <!-- MINOR @TEST POM enable integration tests -->
<!--	<profiles>-->
<!--		<profile>-->

<!--			<id>run-integration-tests</id>-->
<!--			<activation>-->
<!--				<property>-->
<!--					<name>maven.test.skip</name>-->
<!--					<value>!true</value>-->
<!--				</property>-->
<!--			</activation>-->

<!--			<build>-->
<!--				<plugins>-->
<!--					<plugin>-->
<!--						<groupId>org.apache.maven.plugins</groupId>-->
<!--						<artifactId>maven-invoker-plugin</artifactId>-->
<!--						<version>1.5</version>-->
<!--						<executions>-->

<!--							<execution>-->
<!--								<id>integration-test</id>-->
<!--								<phase>integration-test</phase>-->
<!--								<goals>-->
<!--									<goal>install</goal>-->
<!--									<goal>run</goal>-->
<!--								</goals>-->

<!--								<configuration>-->
<!--									<debug>true</debug>-->
<!--									<projectsDirectory>src/it</projectsDirectory>-->
<!--									<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>-->
<!--									<pomIncludes>-->
<!--										<pomInclude>*/pom.xml</pomInclude>-->
<!--									</pomIncludes>-->

<!--									<localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>-->
<!--									<settingsFile>src/it/settings.xml</settingsFile>-->
<!--									<showErrors>true</showErrors>-->
<!--								</configuration>-->
<!--							</execution>-->
<!--						</executions>-->
<!--					</plugin>-->

<!--				</plugins>-->
<!--			</build>-->
<!--		</profile>-->
<!--	</profiles>-->
    
    
    <!-- ******************************************************************* -->
    <!--                                S C M                                -->
    <!-- ******************************************************************* -->
    
    <scm>
        <connection>scm:svn:https://josceleton.svn.sourceforge.net/svnroot/josceleton/artifacts/poms-reactor/trunk/java-pom/</connection>
        <developerConnection>scm:svn:https://josceleton.svn.sourceforge.net/svnroot/josceleton/artifacts/poms-reactor/trunk/java-pom/</developerConnection>
        <url>http://josceleton.svn.sourceforge.net/viewvc/josceleton/artifacts/poms-reactor/trunk/java-pom/</url>
    </scm>
    
</project>
